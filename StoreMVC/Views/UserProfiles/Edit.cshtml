@model StoreMVC.Models.UserProfileFull

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.IsInRole("Admin"))
{
	<h2>Edit by admin</h2>

	using (Html.BeginForm("EditByAdmin", "UserProfiles", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<div class="form-horizontal">
			<h4>UserProfile</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.UserId)

			<div class="form-group">
				@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>
			</div>
			@if (User.IsInRole("Admin"))
			{
				<div class="form-group">
					@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@*@Html.DropDownListFor(model => model.Roles, Model.RolesSelectList, new { htmlAttributes = new { @class = "form-control" } })*@
						@Html.DropDownList("Roles", (SelectList)ViewBag.RolesSelectList, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
					</div>
				</div>
			}

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-lg btn-primary" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.Partial("_BackButtonPartial", "Back")<br />
	</div>
}
else
{
	<h2>Edit</h2>

	using (Html.BeginForm("EditByUser", "UserProfiles", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<div class="form-horizontal">
			<h4>UserProfile</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.UserId)

			<div class="form-group">
				@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>
			</div>
			@if (User.IsInRole("Admin"))
			{
				<div class="form-group">
					@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@*@Html.DropDownListFor(model => model.Roles, Model.RolesSelectList, new { htmlAttributes = new { @class = "form-control" } })*@
						@Html.DropDownList("Roles", (SelectList)ViewBag.RolesSelectList, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
					</div>
				</div>
			}

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10 btn-group">
					@Html.Partial("_BackButtonPartial", "Cancel")
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
}